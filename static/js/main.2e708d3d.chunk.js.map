{"version":3,"sources":["shared/baseURL.js","images/user.png","images/logo.png","view/components/Users/User/BasicUser/BasicUser.js","view/components/Users/User/DetailedUser/DetailedUser.js","view/components/Users/User/User.js","entities/userObj.js","services/userService.js","view/components/Search/Search.js","view/components/Loader/Loader.js","view/components/Header/Header.js","services/storageService.js","view/components/ErrorMsg/ErrorMsg.js","view/components/ErrorBoundary/ErrorBoundary.js","view/components/Users/Users.js","view/components/Repositories/Repo/BasicRepo/BasicRepo.js","view/components/Repositories/Repo/DetailedRepo/DetailedRepo.js","view/components/Repositories/Repo/Repo.js","entities/repoObj.js","shared/utilities.js","services/repoService.js","view/components/Repositories/Repositories.js","view/components/Repositories/SingleRepo/SingleRepo.js","view/App.js","index.js"],"names":["baseURL","axios","create","module","exports","BasicUser","name","avatar","to","className","src","alt","slice","DetailedUser","bio","fullName","User","isDetailed","user","this","avatar_url","profile","login","id","require","userService","get","then","response","data","map","items","Search","insert","search","type","placeholder","onChange","event","target","value","insertTerm","onKeyUp","keyCode","onClick","Loader","Header","isMain","logo","storageService","key","valueToStore","JSON","stringify","sessionStorage","setItem","parse","getItem","ErrorMsg","role","aria-label","ErrorBoundary","state","hasError","error","errorInfo","console","log","props","children","React","Component","Users","setState","searchedUser","isLoading","searchUsers","users","set","catch","finally","oldUsers","getUsers","BasicRepo","userName","description","created","DetailedRepo","stargazers","watchers","forks","license","Repo","repo","date","dateOf","Date","y","getFullYear","m","getMonth","d","getDate","convertDate","created_at","stargazers_count","watchers_count","forks_count","repoService","Repositories","repos","getUser","match","params","getRepos","SingleRepo","url","getSingleRepo","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e708d3d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL=axios.create({\r\n    baseURL:'https://api.github.com/'\r\n})\r\n\r\nexport { baseURL }","module.exports = __webpack_public_path__ + \"static/media/user.90f7e49c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.3e54ed15.png\";","import React from 'react';\r\nimport '../User.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BasicUser = ({ name, avatar }) =>{\r\n    return(\r\n        <Link to={`/repositories/${name}`} className='link'>\r\n            <div className='card'>\r\n                <img className='cardImage' src={avatar} alt='profileImage'/>\r\n                <h3 className='name'>{name.slice(0, 18)}</h3>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nBasicUser.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport { BasicUser };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../User.scss';\r\n\r\nconst DetailedUser = ({ avatar, name, bio, fullName }) =>{\r\n    return(\r\n        <div className='card'>\r\n            <img className='cardImage' src={avatar} alt='profileImage'/>\r\n            <h3 className='darkName'>{name.slice(0, 18)}</h3>\r\n            <h4 className='cardInfo'><i className='fa fa-user'></i> {fullName}</h4>\r\n            <h4 className='cardInfo'><i className=\"fa fa-info-circle\"></i> {bio}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nDetailedUser.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    bio: PropTypes.string.isRequired,\r\n    fullName: PropTypes.string.isRequired\r\n}\r\n\r\nexport { DetailedUser };","import React from 'react';\r\nimport './User.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { BasicUser } from './BasicUser/BasicUser';\r\nimport { DetailedUser } from './DetailedUser/DetailedUser';\r\n\r\nconst User = ({ avatar,name, bio, fullName, isDetailed }) => {\r\n    return(\r\n        <>\r\n            {isDetailed\r\n\r\n            ?<DetailedUser \r\n                avatar={avatar}\r\n                name={name}\r\n                fullName={fullName}\r\n                bio={bio}\r\n            />\r\n\r\n            :<BasicUser \r\n                name={name}\r\n                avatar={avatar}\r\n            />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nUser.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    bio: PropTypes.string.isRequired,\r\n    fullName: PropTypes.string.isRequired,\r\n    isDetailed: PropTypes.bool.isRequired\r\n}\r\n\r\nexport { User }","import profile from '../images/user.png';\r\n\r\nclass User{\r\n    constructor(user){\r\n        this.avatar = user.avatar_url ? user.avatar_url : profile;\r\n        this.name = user.login;\r\n        this.id = user.id;\r\n        this.fullName = user.name ? user.name.slice(0, 20) : 'unknown';\r\n        this.bio = user.bio ? user.bio.slice(0, 20) : 'no description';\r\n    }\r\n}\r\n\r\nexport { User }","import { User } from \"../entities/userObj\";\r\n\r\nconst { baseURL } = require(\"../shared/baseURL\");\r\n\r\nclass UserService{\r\n\r\n    getUsers(){\r\n        return baseURL.get('users')\r\n        .then(response => {\r\n            const usersList = response.data;\r\n            const newUsersList = usersList.map(user => new User(user))\r\n            return newUsersList;\r\n        })\r\n    }\r\n\r\n    getUser(name){\r\n        return baseURL.get(`users/${name}`)\r\n        .then(response => new User(response.data))\r\n    }\r\n\r\n    searchUsers(name){\r\n        return baseURL.get(`search/users?q=${name}`)\r\n        .then(response => {\r\n            const usersList = response.data.items;\r\n            const newUsersList = usersList.map(user => new User(user))\r\n            return newUsersList;\r\n        })\r\n    }\r\n}\r\n\r\nexport const userService = new UserService(); ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Search.scss';\r\n\r\nconst Search = ({ insert, search }) => {\r\n\r\n    const insertTerm=(event)=>{\r\n        const name = event.target.value;\r\n        insert(name)\r\n    }\r\n\r\n    return(\r\n        <div className=\"search\">\r\n            <input \r\n                type=\"search\"      \r\n                className=\"searchTerm\"\r\n                placeholder=\"Who do you need?\"\r\n                onChange={event => insertTerm(event)}\r\n                onKeyUp={event => event.keyCode === 13 && search()}\r\n                />\r\n            <button type=\"submit\" className=\"searchButton\" onClick={search}>\r\n                <i className=\"fa fa-search\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearch.propTypes = {\r\n    insert: PropTypes.func.isRequired,\r\n    search: PropTypes.func.isRequired\r\n}\r\n\r\nexport { Search };","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Loader };","import React from 'react';\r\nimport './Header.scss';\r\nimport logo from '../../../images/logo.png'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ isMain }) => {\r\n    return(\r\n        <div className='header'>\r\n            {isMain\r\n            ?<div className='center'>\r\n                <img className='logo' src={logo} alt='logo' />\r\n            </div>\r\n            :<div className='center'>\r\n                <Link to='/' className='link'><i className='fa fa-arrow-left back'></i></Link>\r\n            </div>\r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    isMain: PropTypes.bool.isRequired\r\n}\r\n\r\nexport { Header };","class StorageService{\r\n\r\n    set(key, value) {\r\n        const valueToStore = JSON.stringify(value);\r\n        sessionStorage.setItem(key, valueToStore);\r\n        return valueToStore;\r\n    }\r\n\r\n    get(key) {\r\n        return JSON.parse(sessionStorage.getItem(key))\r\n    }\r\n}\r\n\r\nexport const storageService = new StorageService();","import React from 'react';\r\nimport './ErrorMsg.scss';\r\n\r\nconst ErrorMsg = () => {\r\n\r\n        return (\r\n          <div className='containerError'>\r\n            <h2>Something went wrong. Try again later <span role='img' aria-label=\"smile\">&#x1F610;</span></h2>\r\n          </div>\r\n        )\r\n  }\r\n\r\n  export { ErrorMsg };","import React from 'react';\r\nimport { ErrorMsg } from '../ErrorMsg/ErrorMsg';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n          hasError: false\r\n        };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      \r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        \r\n        return <ErrorMsg />;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export { ErrorBoundary }","import React from 'react';\r\nimport { User } from './User/User';\r\nimport { userService } from '../../../services/userService';\r\nimport './Users.scss';\r\nimport { Search } from '../Search/Search';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { Header } from '../Header/Header';\r\nimport { storageService } from '../../../services/storageService';\r\nimport { ErrorMsg } from '../ErrorMsg/ErrorMsg';\r\nimport { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary';\r\n\r\nclass Users extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            users: [],\r\n            searchedUser: '',\r\n            isLoading: true,\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const oldUsers=storageService.get('users')\r\n        \r\n        if(oldUsers){\r\n            this.setState({ users: oldUsers, isLoading: false })\r\n        } else{\r\n            userService.getUsers()\r\n            .then(response => this.setState({ users: response }))\r\n            .catch(() => this.setState({ hasError: true }))\r\n            .finally(() => this.setState({ isLoading: false }))\r\n        }\r\n    }\r\n\r\n    insert = (name) => {\r\n        this.setState({ searchedUser: name })\r\n    }\r\n\r\n    search = () => {\r\n        this.setState({ isLoading: true })\r\n        \r\n        userService.searchUsers(this.state.searchedUser)\r\n        .then(response => {\r\n            this.setState({ users: response })\r\n            storageService.set('users', this.state.users)\r\n        })\r\n        .catch(() => this.setState({ hasError: true }))\r\n        .finally(() => this.setState({ isLoading: false }))\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoading){\r\n            return <Loader />\r\n        }\r\n        return(\r\n            <>\r\n                {this.state.hasError\r\n\r\n                ?<ErrorMsg />\r\n                \r\n                :<>\r\n                    <Header isMain={true}/>\r\n                    <Search insert={this.insert} search={this.search} />\r\n                    <ErrorBoundary>\r\n                    <div className='container'>\r\n                        {this.state.users.map(user => \r\n                            <User\r\n                                avatar={user.avatar}\r\n                                name={user.name}\r\n                                key={user.id}\r\n                                isDetailed={false}\r\n                                fullName={''}\r\n                                bio={''}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    </ErrorBoundary>\r\n                </>\r\n                }  \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Users }","import React from 'react';\r\nimport '../Repo.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BasicRepo = ({ userName, name, description, created }) =>{\r\n    return(\r\n        <Link to={`/repositories/${userName}/${name}`} target='_blank' className='link'>\r\n            <div className='cardRepo'>\r\n                <h1 className='nameRepo'>{name}</h1>\r\n                <h4 className='descrRepo'>{description}</h4>\r\n                <div className='infoRepo'>\r\n                    <h4><i className='fa fa-calendar'></i> {created}</h4>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nBasicRepo.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    created: PropTypes.string.isRequired,\r\n    userName: PropTypes.string.isRequired\r\n}\r\n\r\nexport { BasicRepo };","import React from 'react';\r\nimport '../Repo.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DetailedRepo = ({ name, description, created, stargazers, watchers, forks, license }) =>{\r\n    return(\r\n        <div className='cardRepo height'>\r\n            <h1 className='nameRepo'>{name}</h1>\r\n            <h4 className='descrRepo'>{description}</h4>\r\n            <div className='infoRepo'>\r\n                <h4><i className='fa fa-calendar'></i> {created}</h4>\r\n                <h4><i className='fa fa-star'></i> {stargazers}</h4>\r\n                <h4><i className='fa fa-eye'></i> {watchers}</h4>\r\n                <h4><i className='fa fa-code-fork'></i> {forks}</h4>\r\n                <h4>{license}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDetailedRepo.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    created: PropTypes.string.isRequired,\r\n    stargazers: PropTypes.number.isRequired,\r\n    watchers: PropTypes.number.isRequired,\r\n    forks: PropTypes.number.isRequired,\r\n    license: PropTypes.string.isRequired\r\n}\r\n\r\nexport { DetailedRepo };","import React from 'react';\r\nimport './Repo.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { BasicRepo } from './BasicRepo/BasicRepo';\r\nimport { DetailedRepo } from './DetailedRepo/DetailedRepo';\r\n\r\nconst Repo = ({ isDetailed, name, description, created, stargazers, watchers, forks, license, userName }) => {\r\n    return(\r\n        <>\r\n        {isDetailed\r\n\r\n        ?<DetailedRepo\r\n            name={name}\r\n            description={description}\r\n            created={created}\r\n            stargazers={stargazers}\r\n            watchers={watchers}\r\n            forks={forks}\r\n            license={license}\r\n        />\r\n\r\n        :<BasicRepo \r\n            userName={userName}\r\n            name={name}\r\n            description={description}\r\n            created={created}\r\n        />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nRepo.propTypes = {\r\n    userName: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    created: PropTypes.string.isRequired,\r\n    stargazers: PropTypes.number.isRequired,\r\n    watchers: PropTypes.number.isRequired,\r\n    forks: PropTypes.number.isRequired,\r\n    license: PropTypes.string.isRequired\r\n}\r\n\r\nexport { Repo };","import { convertDate } from '../shared/utilities';\r\n\r\nclass Repo {\r\n    constructor(repo){\r\n        this.id = repo.id;\r\n        this.name = repo.name;\r\n        this.description = repo.description ? repo.description.slice(0, 85) : 'no description';\r\n        this.created = convertDate(repo.created_at);\r\n        this.stargazers = repo.stargazers_count;\r\n        this.watchers = repo.watchers_count;\r\n        this.forks = repo.forks_count;\r\n        this.license = repo.license ? repo.license.name : 'no license';\r\n    }\r\n}\r\n\r\nexport { Repo };","const convertDate = (date) => {\r\n\r\n    const dateOf = new Date(date);\r\n    const y = dateOf.getFullYear();\r\n    const m = dateOf.getMonth() + 1;\r\n    const d = dateOf.getDate();\r\n\r\n    return (\r\n        `${d}-${m}-${y}`\r\n    )\r\n}\r\n\r\nexport { convertDate };","import { Repo } from \"../entities/repoObj\";\r\n\r\nconst { baseURL } = require(\"../shared/baseURL\");\r\n\r\nclass RepoService{\r\n\r\n    getRepos(name){\r\n        return baseURL.get(`users/${name}/repos`)\r\n        .then(response => {\r\n            const reposList = response.data;\r\n            const newReposList = reposList.map(repo => new Repo(repo))\r\n            return newReposList;\r\n        })\r\n    }\r\n\r\n    getSingleRepo(repo){\r\n        return baseURL.get(`repos/${repo}`)\r\n        .then(response => new Repo(response.data))\r\n    }\r\n}\r\n\r\nexport const repoService = new RepoService();","import React from 'react';\r\nimport { Repo } from './Repo/Repo';\r\nimport { repoService } from '../../../services/repoService';\r\nimport { userService } from '../../../services/userService';\r\nimport './Repositories.scss';\r\nimport { User } from '../Users/User/User';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { Header } from '../Header/Header';\r\nimport { ErrorMsg } from '../ErrorMsg/ErrorMsg';\r\nimport { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary';\r\n\r\nclass Repositories extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            user: null,\r\n            repos: [],\r\n            isLoading: true,\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        userService.getUser(this.props.match.params.id)\r\n        .then(response => this.setState({ user: response }))\r\n        .catch(() => this.setState({ hasError: true }))\r\n        .finally(() => this.setState({ isLoading: false }))\r\n        \r\n        \r\n        repoService.getRepos(this.props.match.params.id)\r\n        .then(response => this.setState({ repos: response }))\r\n        .catch(() => this.setState({ hasError: true }))\r\n        .finally(() => this.setState({ isLoading: false }))\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoading){\r\n            return <Loader />\r\n        }\r\n        return(\r\n            <>\r\n                {this.state.hasError\r\n                \r\n                ?<ErrorMsg />\r\n\r\n                :<>\r\n                    <Header isMain={false}/>\r\n                    <div className='containerRepo'>\r\n                        <ErrorBoundary>\r\n                        <User\r\n                            avatar={this.state.user.avatar}\r\n                            name={this.state.user.name}\r\n                            bio={this.state.user.bio}\r\n                            fullName={this.state.user.fullName}\r\n                            isDetailed={true}\r\n                        /></ErrorBoundary>\r\n                    </div>\r\n                    <div className='containerRepo'>\r\n                        {this.state.repos.map(repo => \r\n                            <Repo\r\n                                userName={this.state.user.name}\r\n                                isDetailed={false}\r\n                                key={repo.id}\r\n                                name={repo.name}\r\n                                description={repo.description}\r\n                                created={repo.created}\r\n                                stargazers={repo.stargazers}\r\n                                watchers={repo.watchers}\r\n                                forks={repo.forks}\r\n                                license={repo.license}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </>\r\n                }\r\n            </>    \r\n        )\r\n    }\r\n}\r\n\r\nexport { Repositories }","import React from 'react';\r\nimport { repoService } from '../../../../services/repoService';\r\nimport { ErrorMsg } from '../../ErrorMsg/ErrorMsg';\r\nimport { Header } from '../../Header/Header';\r\nimport { Loader } from '../../Loader/Loader';\r\nimport { Repo } from '../Repo/Repo';\r\nimport './SingleRepo.scss';\r\n\r\nclass SingleRepo extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            repo: null,\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const url=this.props.match.url.slice(14)\r\n        repoService.getSingleRepo(url)\r\n        .then(response => this.setState({ repo: response }))\r\n        .catch(() => this.setState({ hasError: true }))\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <ErrorMsg />\r\n        }\r\n        return(\r\n            <>\r\n                <Header isMain={true}/>\r\n                <div className='containerSingleRepo'>\r\n                    {this.state.repo\r\n                    ?<Repo \r\n                        isDetailed={true}\r\n                        name={this.state.repo.name}\r\n                        description={this.state.repo.description}\r\n                        created={this.state.repo.created}\r\n                        stargazers={this.state.repo.stargazers}\r\n                        watchers={this.state.repo.watchers}\r\n                        forks={this.state.repo.forks}\r\n                        license={this.state.repo.license}\r\n                        userName={''}\r\n                    />\r\n                    : <Loader />\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport { SingleRepo };","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Users } from './components/Users/Users';\nimport { Repositories } from './components/Repositories/Repositories';\nimport { SingleRepo } from './components/Repositories/SingleRepo/SingleRepo';\n\nfunction App() {\n  return (\n    <Switch>\n        <Route exact path='/' component={Users} />\n        <Route exact path='/repositories/:id' component={Repositories} />\n        <Route exact path='/repositories/:id/:id' component={SingleRepo} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './view/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}