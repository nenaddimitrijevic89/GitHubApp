{"version":3,"sources":["shared/baseURL.js","images/logo.png","images/user.png","view/components/Users/User/BasicUser/BasicUser.js","view/components/Users/User/DetailedUser/DetailedUser.js","view/components/Users/User/User.js","view/components/Search/Search.js","view/components/Loader/Loader.js","view/components/Header/Header.js","view/components/ErrorMsg/ErrorMsg.js","entities/userObj.js","services/userService.js","services/storageService.js","store/actions/users.js","store/actions/actionTypes.js","view/components/Users/Users.js","view/components/Repositories/Repo/BasicRepo/BasicRepo.js","view/components/Repositories/Repo/DetailedRepo/DetailedRepo.js","view/components/Repositories/Repo/Repo.js","entities/repoObj.js","shared/utilities.js","services/repoService.js","view/components/Repositories/Repositories.js","store/actions/repos.js","view/components/Repositories/SingleRepo/SingleRepo.js","view/App.js","store/reducers/users.js","store/reducers/repos.js","index.js"],"names":["baseURL","axios","create","module","exports","BasicUser","name","avatar","setId","to","className","onClick","src","alt","slice","DetailedUser","bio","fullName","User","isDetailed","Search","insert","search","type","placeholder","onChange","event","target","value","insertTerm","onKeyUp","keyCode","Loader","Header","isMain","resetId","logo","window","history","back","ErrorMsg","role","aria-label","user","this","avatar_url","profile","login","id","require","userService","get","then","response","data","map","items","storageService","key","valueToStore","JSON","stringify","sessionStorage","setItem","parse","getItem","setUsers","users","Users","state","searchedUser","setState","props","onSearchUsers","onInitUsers","error","length","onSetUserId","React","Component","connect","dispatch","getUsers","set","catch","actions","searchUsers","userId","BasicRepo","userName","description","created","setRepoId","DetailedRepo","stargazers","watchers","forks","license","Repo","repo","date","dateOf","Date","y","getFullYear","m","getMonth","d","getDate","convertDate","created_at","stargazers_count","watchers_count","forks_count","repoService","Repositories","onFetchSingleUser","onFetchRepos","userAndRepo","repError","userError","repos","singleUser","onSetSingleRepoId","onResetUserId","getRepos","repoActions","getUser","usersActions","singleRepoId","SingleRepo","onFetchSingleRepo","repoId","onResetSingleRepo","singleRepo","console","log","getSingleRepo","App","exact","path","component","initialState","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","usersReducer","reposReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cb3e398.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL=axios.create({\r\n    baseURL:'https://api.github.com/'\r\n})\r\n\r\nexport { baseURL }","module.exports = __webpack_public_path__ + \"static/media/logo.3e54ed15.png\";","module.exports = __webpack_public_path__ + \"static/media/user.90f7e49c.png\";","import React from 'react';\r\nimport '../User.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BasicUser = ({ name, avatar, setId }) =>{\r\n    return(\r\n        <Link to={`/repositories/${name}`} className='link' onClick={() => setId(name)}>\r\n            <div className='card'>\r\n                <img className='cardImage' src={avatar} alt='profileImage'/>\r\n                <h3 className='name'>{name.slice(0, 18)}</h3>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nBasicUser.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport { BasicUser };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../User.scss';\r\n\r\nconst DetailedUser = ({ avatar, name, bio, fullName }) =>{\r\n    return(\r\n        <div className='card'>\r\n            <img className='cardImage' src={avatar} alt='profileImage'/>\r\n            <h3 className='darkName'>{name.slice(0, 18)}</h3>\r\n            <h4 className='cardInfo'><i className='fa fa-user'></i> {fullName}</h4>\r\n            <h4 className='cardInfo'><i className=\"fa fa-info-circle\"></i> {bio}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nDetailedUser.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    bio: PropTypes.string.isRequired,\r\n    fullName: PropTypes.string.isRequired\r\n}\r\n\r\nexport { DetailedUser };","import React from 'react';\r\nimport './User.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { BasicUser } from './BasicUser/BasicUser';\r\nimport { DetailedUser } from './DetailedUser/DetailedUser';\r\n\r\nconst User = ({ avatar,name, bio, fullName, isDetailed, setId }) => {\r\n    return(\r\n        <>\r\n            {isDetailed\r\n\r\n            ?<DetailedUser \r\n                avatar={avatar}\r\n                name={name}\r\n                fullName={fullName}\r\n                bio={bio}\r\n            />\r\n\r\n            :<BasicUser \r\n                name={name}\r\n                avatar={avatar}\r\n                setId={setId}\r\n            />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nUser.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    bio: PropTypes.string.isRequired,\r\n    fullName: PropTypes.string.isRequired,\r\n    isDetailed: PropTypes.bool.isRequired\r\n}\r\n\r\nexport { User }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Search.scss';\r\n\r\nconst Search = ({ insert, search }) => {\r\n\r\n    const insertTerm=(event)=>{\r\n        const name = event.target.value;\r\n        insert(name)\r\n    }\r\n\r\n    return(\r\n        <div className=\"search\">\r\n            <input \r\n                type=\"search\"      \r\n                className=\"searchTerm\"\r\n                placeholder=\"Who do you need?\"\r\n                onChange={event => insertTerm(event)}\r\n                onKeyUp={event => event.keyCode === 13 && search()}\r\n                />\r\n            <button type=\"submit\" className=\"searchButton\" onClick={search}>\r\n                <i className=\"fa fa-search\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearch.propTypes = {\r\n    insert: PropTypes.func.isRequired,\r\n    search: PropTypes.func.isRequired\r\n}\r\n\r\nexport { Search };","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Loader };","import React from 'react';\r\nimport './Header.scss';\r\nimport logo from '../../../images/logo.png'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ isMain, resetId }) => {\r\n    return(\r\n        <div className='header'>\r\n            {isMain\r\n            ?<div className='center'>\r\n                <img className='logo' src={logo} alt='logo' />\r\n            </div>\r\n            :<div className='center'>\r\n                <div className='link' onClick={() => { resetId(); window.history.back();}}>\r\n                    <i className='fa fa-arrow-left back'></i>\r\n                </div>\r\n            </div>\r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    isMain: PropTypes.bool.isRequired,\r\n    resetId: PropTypes.func.isRequired\r\n}\r\n\r\nexport { Header };","import React from 'react';\r\nimport './ErrorMsg.scss';\r\n\r\nconst ErrorMsg = () => {\r\n\r\n        return (\r\n          <div className='containerError'>\r\n            <h2>Something went wrong. Try again later <span role='img' aria-label=\"smile\">&#x1F610;</span></h2>\r\n          </div>\r\n        )\r\n  }\r\n\r\n  export { ErrorMsg };","import profile from '../images/user.png';\r\n\r\nclass User{\r\n    constructor(user){\r\n        this.avatar = user.avatar_url ? user.avatar_url : profile;\r\n        this.name = user.login;\r\n        this.id = user.id;\r\n        this.fullName = user.name ? user.name.slice(0, 20) : 'unknown';\r\n        this.bio = user.bio ? user.bio.slice(0, 20) : 'no description';\r\n    }\r\n}\r\n\r\nexport { User }","import { User } from \"../entities/userObj\";\r\n\r\nconst { baseURL } = require(\"../shared/baseURL\");\r\n\r\nclass UserService{\r\n\r\n    getUsers(){\r\n        return baseURL.get('users')\r\n        .then(response => {\r\n            const usersList = response.data;\r\n            const newUsersList = usersList.map(user => new User(user))\r\n            return newUsersList;\r\n        })\r\n    }\r\n\r\n    getUser(name){\r\n        return baseURL.get(`users/${name}`)\r\n        .then(response => new User(response.data))\r\n    }\r\n\r\n    searchUsers(name){\r\n        return baseURL.get(`search/users?q=${name}`)\r\n        .then(response => {\r\n            const usersList = response.data.items;\r\n            const newUsersList = usersList.map(user => new User(user))\r\n            return newUsersList;\r\n        })\r\n    }\r\n}\r\n\r\nexport const userService = new UserService(); ","class StorageService{\r\n\r\n    set(key, value) {\r\n        const valueToStore = JSON.stringify(value);\r\n        sessionStorage.setItem(key, valueToStore);\r\n        return valueToStore;\r\n    }\r\n\r\n    get(key) {\r\n        return JSON.parse(sessionStorage.getItem(key))\r\n    }\r\n}\r\n\r\nexport const storageService = new StorageService();","import * as actionTypes from './actionTypes';\r\nimport { userService } from '../../services/userService';\r\nimport { storageService } from '../../services/storageService';\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: actionTypes.SET_USERS,\r\n        users: users\r\n    };\r\n};\r\n\r\nexport const setSearchedUsers = (users) => {\r\n    return {\r\n        type: actionTypes.SEARCH_USERS,\r\n        users: users\r\n    };\r\n};\r\n\r\nexport const fetchUsersFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_USERS_FAILED\r\n    };\r\n};\r\n\r\nexport const initUsers = () => {\r\n    const users = storageService.get('users');\r\n    if(users && users.length){\r\n        return dispatch => {\r\n            dispatch(setUsers(users))\r\n        }\r\n    }\r\n    return dispatch => {\r\n        userService.getUsers()\r\n            .then(response => {\r\n                dispatch(setUsers(response))\r\n                storageService.set('users', response)\r\n            })\r\n            .catch(() => {\r\n                dispatch(fetchUsersFailed())\r\n            })\r\n    };\r\n};\r\n\r\nexport const searchUsers = (name) => {\r\n    return dispatch => {\r\n        userService.searchUsers(name)\r\n        .then(response => {\r\n            dispatch(setSearchedUsers(response))\r\n            storageService.set('users', response)\r\n        })\r\n        .catch(() => {\r\n            dispatch(fetchUsersFailed())\r\n        })\r\n    };\r\n};\r\n\r\nexport const setUserId = (id) => {\r\n    return {\r\n        type: actionTypes.SET_USER_ID,\r\n        userId: id\r\n    };\r\n};\r\n\r\nexport const resetUserId = () => {\r\n    return {\r\n        type: actionTypes.RESET_USER\r\n    };\r\n};\r\n\r\nexport const setSingleUser = (user) => {\r\n    return {\r\n        type: actionTypes.SET_SINGLE_USER,\r\n        singleUser: user\r\n    };\r\n};\r\n\r\nexport const fetchSingleUserFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_SINGLE_USER_FAILED\r\n    };\r\n};\r\n\r\nexport const fetchSingleUser = (id) => {\r\n    return dispatch => {\r\n        userService.getUser(id)\r\n        .then(response => {\r\n            dispatch(setSingleUser(response))\r\n        })\r\n        .catch(() => {\r\n            dispatch(fetchSingleUserFailed())\r\n        })\r\n    };\r\n}; ","export const SET_USERS = 'SET_USERS';\r\nexport const FETCH_USERS_FAILED = 'FETCH_USERS_FAILED';\r\nexport const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const SET_USER_ID = 'SET_USER_ID';\r\nexport const RESET_USER = 'RESET_USER';\r\nexport const SET_SINGLE_USER = 'SET_SINGLE_USER';\r\nexport const FETCH_SINGLE_USER_FAILED = 'FETCH_SINGLE_USER_FAILED';\r\n\r\nexport const SET_REPOS = 'SET_REPOS';\r\nexport const FETCH_REPOS_FAILED = 'FETCH_REPOS_FAILED';\r\nexport const SET_SINGLE_REPO = 'SET_SINGLE_REPO';\r\nexport const RESET_SINGLE_REPO = 'RESET_SINGLE_REPO';\r\nexport const FETCH_SINGLE_REPO_FAILED = 'FETCH_SINGLE_REPO_FAILED';\r\nexport const SET_SINGLE_REPO_ID = 'SET_SINGLE_REPO_ID';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { User } from './User/User';\r\nimport './Users.scss';\r\nimport { Search } from '../Search/Search';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { Header } from '../Header/Header';\r\nimport { ErrorMsg } from '../ErrorMsg/ErrorMsg';\r\nimport * as actions from '../../../store/actions/users';\r\n\r\nclass Users extends React.Component{\r\n        state = {\r\n            searchedUser: ''\r\n        }\r\n\r\n    componentDidMount(){\r\n        this.props.onInitUsers()\r\n    }\r\n\r\n    insert = (name) => {\r\n        this.setState({ searchedUser: name })\r\n    }\r\n\r\n    search = () => {\r\n        this.props.onSearchUsers(this.state.searchedUser)\r\n    }\r\n\r\n    render(){\r\n\r\n        let users = this.props.error ? <ErrorMsg /> : <Loader />;\r\n\r\n        if(this.props.users){\r\n            if(this.props.users.length === 0){\r\n                users = <ErrorMsg />\r\n            }else {\r\n                users = (\r\n                    <>\r\n                        <Header isMain={true}/>\r\n                        <Search insert={this.insert} search={this.search} />\r\n                        <div className='container'>\r\n                            {this.props.users.map(user => \r\n                                <User\r\n                                    avatar={user.avatar}\r\n                                    name={user.name}\r\n                                    key={user.id}\r\n                                    isDetailed={false}\r\n                                    fullName={''}\r\n                                    bio={''}\r\n                                    setId={this.props.onSetUserId}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </>\r\n            )}\r\n        }\r\n\r\n        return(\r\n            <>\r\n                {users}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      users: state.users.users,\r\n      error: state.users.error\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onInitUsers: () => dispatch(actions.initUsers()),\r\n      onSearchUsers: (name) => dispatch(actions.searchUsers(name)),\r\n      onSetUserId: (id) => dispatch(actions.setUserId(id))\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React from 'react';\r\nimport '../Repo.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BasicRepo = ({ userName, name, description, created, setRepoId }) => {\r\n    return(\r\n        <Link to={`/repositories/${userName}/${name}`} onClick={() => setRepoId(name)} className='link'>\r\n            <div className='cardRepo'>\r\n                <h1 className='nameRepo'>{name}</h1>\r\n                <h4 className='descrRepo'>{description}</h4>\r\n                <div className='infoRepo'>\r\n                    <h4><i className='fa fa-calendar'></i> {created}</h4>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nBasicRepo.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    created: PropTypes.string.isRequired,\r\n    userName: PropTypes.string.isRequired\r\n}\r\n\r\nexport { BasicRepo };","import React from 'react';\r\nimport '../Repo.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DetailedRepo = ({ name, description, created, stargazers, watchers, forks, license }) =>{\r\n    return(\r\n        <div className='cardRepo height'>\r\n            <h1 className='nameRepo'>{name}</h1>\r\n            <h4 className='descrRepo'>{description}</h4>\r\n            <div className='infoRepo'>\r\n                <h4><i className='fa fa-calendar'></i> {created}</h4>\r\n                <h4><i className='fa fa-star'></i> {stargazers}</h4>\r\n                <h4><i className='fa fa-eye'></i> {watchers}</h4>\r\n                <h4><i className='fa fa-code-fork'></i> {forks}</h4>\r\n                <h4>{license}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDetailedRepo.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    created: PropTypes.string.isRequired,\r\n    stargazers: PropTypes.number.isRequired,\r\n    watchers: PropTypes.number.isRequired,\r\n    forks: PropTypes.number.isRequired,\r\n    license: PropTypes.string.isRequired\r\n}\r\n\r\nexport { DetailedRepo };","import React from 'react';\r\nimport './Repo.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { BasicRepo } from './BasicRepo/BasicRepo';\r\nimport { DetailedRepo } from './DetailedRepo/DetailedRepo';\r\n\r\nconst Repo = ({ isDetailed, name, description, created, stargazers, watchers, forks, license, userName, setRepoId }) => {\r\n    return(\r\n        <>\r\n        {isDetailed\r\n\r\n        ?<DetailedRepo\r\n            name={name}\r\n            description={description}\r\n            created={created}\r\n            stargazers={stargazers}\r\n            watchers={watchers}\r\n            forks={forks}\r\n            license={license}\r\n        />\r\n\r\n        :<BasicRepo \r\n            userName={userName}\r\n            name={name}\r\n            description={description}\r\n            created={created}\r\n            setRepoId={setRepoId}\r\n        />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nRepo.propTypes = {\r\n    userName: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    created: PropTypes.string.isRequired,\r\n    stargazers: PropTypes.number.isRequired,\r\n    watchers: PropTypes.number.isRequired,\r\n    forks: PropTypes.number.isRequired,\r\n    license: PropTypes.string.isRequired\r\n}\r\n\r\nexport { Repo };","import { convertDate } from '../shared/utilities';\r\n\r\nclass Repo {\r\n    constructor(repo){\r\n        this.id = repo.id;\r\n        this.name = repo.name;\r\n        this.description = repo.description ? repo.description.slice(0, 85) : 'no description';\r\n        this.created = convertDate(repo.created_at);\r\n        this.stargazers = repo.stargazers_count;\r\n        this.watchers = repo.watchers_count;\r\n        this.forks = repo.forks_count;\r\n        this.license = repo.license ? repo.license.name : 'no license';\r\n    }\r\n}\r\n\r\nexport { Repo };","const convertDate = (date) => {\r\n\r\n    const dateOf = new Date(date);\r\n    const y = dateOf.getFullYear();\r\n    const m = dateOf.getMonth() + 1;\r\n    const d = dateOf.getDate();\r\n\r\n    return (\r\n        `${d}-${m}-${y}`\r\n    )\r\n}\r\n\r\nexport { convertDate };","import { Repo } from \"../entities/repoObj\";\r\n\r\nconst { baseURL } = require(\"../shared/baseURL\");\r\n\r\nclass RepoService{\r\n\r\n    getRepos(name){\r\n        return baseURL.get(`users/${name}/repos`)\r\n        .then(response => {\r\n            const reposList = response.data;\r\n            const newReposList = reposList.map(repo => new Repo(repo))\r\n            return newReposList;\r\n        })\r\n    }\r\n\r\n    getSingleRepo(repo){\r\n        return baseURL.get(`repos/${repo}`)\r\n        .then(response => new Repo(response.data))\r\n    }\r\n}\r\n\r\nexport const repoService = new RepoService();","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Repo } from './Repo/Repo';\r\nimport './Repositories.scss';\r\nimport { User } from '../Users/User/User';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { Header } from '../Header/Header';\r\nimport { ErrorMsg } from '../ErrorMsg/ErrorMsg';\r\nimport * as repoActions from '../../../store/actions/repos';\r\nimport * as usersActions from '../../../store/actions/users';\r\n\r\nclass Repositories extends React.Component{\r\n   \r\n    componentDidMount(){\r\n        this.props.onFetchSingleUser(this.props.userId);\r\n        this.props.onFetchRepos(this.props.userId);\r\n    }\r\n\r\n    render(){\r\n        let userAndRepo = (this.props.repError || this.props.userError) ? <ErrorMsg /> : <Loader />;\r\n\r\n        let repos = null;\r\n        if(this.props.repos && this.props.singleUser){\r\n            repos = (\r\n                this.props.repos.map(repo => \r\n                    <Repo\r\n                        userName={this.props.singleUser.name}\r\n                        isDetailed={false}\r\n                        key={repo.id}\r\n                        name={repo.name}\r\n                        description={repo.description}\r\n                        created={repo.created}\r\n                        stargazers={repo.stargazers}\r\n                        watchers={repo.watchers}\r\n                        forks={repo.forks}\r\n                        license={repo.license}\r\n                        setRepoId={this.props.onSetSingleRepoId}\r\n                    />\r\n                )\r\n            )\r\n        }\r\n        if(this.props.repos && this.props.singleUser){\r\n            userAndRepo = (\r\n                <>\r\n                    <Header isMain={false} resetId={this.props.onResetUserId}/>\r\n                    <div className='containerRepo'>\r\n                        <User\r\n                            avatar={this.props.singleUser.avatar}\r\n                            name={this.props.singleUser.name}\r\n                            bio={this.props.singleUser.bio}\r\n                            fullName={this.props.singleUser.fullName}\r\n                            isDetailed={true}\r\n                        />\r\n                    </div>\r\n                    <div className='containerRepo'>\r\n                        {repos}\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        return(\r\n            <>\r\n                {userAndRepo}\r\n            </>    \r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.users.userId,\r\n        singleUser: state.users.singleUser,\r\n        userError: state.users.error,\r\n        repos: state.repos.repos,\r\n        repError: state.repos.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchRepos: (id) => dispatch(repoActions.fetchRepos(id)),\r\n        onFetchSingleUser: (id) => dispatch(usersActions.fetchSingleUser(id)),\r\n        onResetUserId: () => dispatch(usersActions.resetUserId()),\r\n        onSetSingleRepoId: (id) => dispatch(repoActions.setSingleRepoId(id))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Repositories);","import * as actionTypes from './actionTypes';\r\nimport { repoService } from '../../services/repoService';\r\n\r\nexport const setRepos = (repos) => {\r\n    return {\r\n        type: actionTypes.SET_REPOS,\r\n        repos: repos\r\n    };\r\n};\r\n\r\nexport const setSingleRepo = (repo) => {\r\n    return {\r\n        type: actionTypes.SET_SINGLE_REPO,\r\n        singleRepo: repo\r\n    };\r\n};\r\n\r\nexport const resetSingleRepo = () => {\r\n    return {\r\n        type: actionTypes.RESET_SINGLE_REPO\r\n    };\r\n};\r\n\r\nexport const setSingleRepoId = (id) => {\r\n    return {\r\n        type: actionTypes.SET_SINGLE_REPO_ID,\r\n        singleRepoId: id\r\n    };\r\n};\r\n\r\nexport const fetchReposFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_REPOS_FAILED\r\n    };\r\n};\r\n\r\nexport const fetchSingleRepoFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_SINGLE_REPO_FAILED\r\n    };\r\n};\r\n\r\nexport const fetchRepos = (id) => {\r\n    return dispatch => {\r\n        repoService.getRepos(id)\r\n        .then(response => {\r\n            dispatch(setRepos(response))\r\n        })\r\n        .catch(() => fetchReposFailed())\r\n    };\r\n};\r\n\r\nexport const fetchSingleRepo = (id) => {\r\n    console.log(id);\r\n    return dispatch => {\r\n        repoService.getSingleRepo(id)\r\n        .then(response => {\r\n            dispatch(setSingleRepo(response))\r\n        })\r\n        .catch(() => {\r\n            dispatch(fetchSingleRepoFailed())\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { ErrorMsg } from '../../ErrorMsg/ErrorMsg';\r\nimport { Header } from '../../Header/Header';\r\nimport { Loader } from '../../Loader/Loader';\r\nimport { Repo } from '../Repo/Repo';\r\nimport './SingleRepo.scss';\r\nimport * as actions from '../../../../store/actions/repos';\r\n\r\nclass SingleRepo extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.onFetchSingleRepo(`${this.props.userId}/${this.props.repoId}`)\r\n    }\r\n\r\n    render(){\r\n        let repo = this.props.error ? <ErrorMsg /> : <Loader />;\r\n\r\n        if(this.props.repo){\r\n            repo = (\r\n                <>\r\n                    <Header resetId={this.props.onResetSingleRepo}/>\r\n                    <div className='containerSingleRepo'>\r\n                        <Repo \r\n                            isDetailed={true}\r\n                            name={this.props.repo.name}\r\n                            description={this.props.repo.description}\r\n                            created={this.props.repo.created}\r\n                            stargazers={this.props.repo.stargazers}\r\n                            watchers={this.props.repo.watchers}\r\n                            forks={this.props.repo.forks}\r\n                            license={this.props.repo.license}\r\n                            userName={''}\r\n                        />\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        return(\r\n            <>\r\n                {repo}\r\n            </>\r\n        )\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        repo: state.repos.singleRepo,\r\n        repoId: state.repos.singleRepoId,\r\n        error: state.repos.error,\r\n        userId: state.users.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchSingleRepo: (id) => dispatch(actions.fetchSingleRepo(id)),\r\n        onResetSingleRepo: () => dispatch(actions.resetSingleRepo())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleRepo);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport Users from './components/Users/Users';\r\nimport Repositories from './components/Repositories/Repositories';\r\nimport SingleRepo from './components/Repositories/SingleRepo/SingleRepo';\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n        <Route exact path='/' component={Users} />\r\n        <Route exact path='/repositories/:id' component={Repositories} />\r\n        <Route exact path='/repositories/:id/:id' component={SingleRepo} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    users: null,\r\n    error: false,\r\n    userId: null,\r\n    singleUser: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n                error: false\r\n            }\r\n        case actionTypes.FETCH_USERS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.SEARCH_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n                error: false\r\n            }\r\n        case actionTypes.SET_USER_ID:\r\n            return {\r\n                ...state,\r\n                userId: action.userId,\r\n                error: false\r\n            }\r\n        case actionTypes.SET_SINGLE_USER:\r\n            return {\r\n                ...state,\r\n                singleUser: action.singleUser,\r\n                error: false\r\n            }\r\n        case actionTypes.FETCH_SINGLE_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.RESET_USER:\r\n            return {\r\n                ...state,\r\n                singleUser: null,\r\n                userId: null\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    repos: null,\r\n    singleRepo: null,\r\n    singleRepoId: null,\r\n    error: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: action.repos,\r\n                error: false\r\n            }\r\n        case actionTypes.FETCH_REPOS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.SET_SINGLE_REPO_ID:\r\n            return {\r\n                ...state,\r\n                singleRepoId: action.singleRepoId,\r\n                error: false\r\n            }\r\n        case actionTypes.SET_SINGLE_REPO:\r\n            return {\r\n                ...state,\r\n                singleRepo: action.singleRepo,\r\n                error: false\r\n            }\r\n        case actionTypes.RESET_SINGLE_REPO:\r\n            return {\r\n                ...state,\r\n                singleRepo: null,\r\n                singleRepoId: null,\r\n                error: false\r\n            }\r\n        case actionTypes.FETCH_SINGLE_REPO_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default: return state; \r\n    };\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\nimport App from './view/App';\r\nimport usersReducer from './store/reducers/users';\r\nimport reposReducer from './store/reducers/repos';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  users: usersReducer,\r\n  repos: reposReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}